<project name="List.it Firefox Extension">
    <import file="../../platform-common.xml"/>

    <target name="-common">
        <local name="addon_path"/>
        <local name="script_path"/>
        <jsonpath basedir="${build.chrome.dir}" prefix="chrome://listit/" property="addon_path">
            <resources refid="assets.firefox_modules.js.compiled" />
        </jsonpath>
        <jsonpath basedir="${build.chrome.dir}" prefix="chrome://listit/" property="script_path">
            <resources refid="assets.background.js.compiled" />
        </jsonpath>
        <copy file="${platform.dir}/background.jsm.tmpl" tofile="${build.content.dir}/background.jsm">
            <filterchain>
                <filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
                    <param type="token" name="scripts" value="${script_path}" />
                    <param type="token" name="addons" value="${addon_path}" />
                </filterreader>
            </filterchain>
        </copy>
    </target>

    <target name="-release">
        <mkdir dir="${build.content.dir}/extension" />
        <copy todir="${build.content.dir}/extension">
            <fileset dir="${platform.dir}/resources/content" />
        </copy>
        <!-- I could compress this, but I don't really care that much -->
        <copy tofile="${build.dir}/bootstrap.js" file="${platform.dir}/resources/bootstrap.js" />
        <release-assets name="firefox_modules" includeDefines="false"/>
        <release-assets name="background" />
    </target>

    <target name="-debug">
        <link overwrite="yes" link="${build.content.dir}/extension" resource="${platform.dir}/resources/content" />
        <link overwrite="yes" link="${build.dir}/bootstrap.js" resource="${platform.dir}/resources/bootstrap.js" />
        <debug-assets name="firefox_modules" includeDefines="false"/>
        <debug-assets name="background" />
    </target>

    <target name="debug"
        depends="build.debug,build.install,build.manifest,-debug,-common" />

    <target name="release"
        depends="build.release,build.install,build.manifest,-release,-common">
        <zip destfile="${deploy.dir}/listit-${listit.version}.xpi" basedir="${build.dir}" />
    </target>

    <target name="build.install" depends="-build.setup">
        <copy file="${platform.dir}/install.rdf.tmpl" tofile="${build.dir}/install.rdf">
            <filterchain>
                <filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
                    <param type="propertiesfile" value="install.properties" />
                    <param type="token" name="version" value="${listit.version}" />
                    <param type="token" name="id" value="${extension.id}" />
                    <param type="token" name="authors" value="${listit.authors}" />
                    <param type="token" name="name" value="${listit.name}" />
                    <param type="token" name="description" value="${listit.description}" />
                </filterreader>
            </filterchain>
        </copy>
    </target>

    <target name="build.manifest" depends="-build.setup">
        <copy file="${platform.dir}/chrome.manifest" tofile="${build.dir}/chrome.manifest" />
    </target>
</project>


