<project name="List.it Chrome Extension">
    <import file="../../platform-common.xml"/>
    <target name="build.img" depends="-build.setup">
        <deploy-img dest="${build.img.dir}"/>
    </target>

    <target name="build.assets-debug" depends="-build.setup">
        <property name="assets.dir" location="${listit.dir}" />
        <deploy-resource-debug name="wysihtml5" />

        <mk-defines-debug />

        <parallel>
            <deploy-resource-debug name="sidebar" />
            <deploy-resource-debug name="options" />
            <deploy-resource-debug name="addnotebox" />
            <deploy-resource-debug name="background" />
        </parallel>
    </target>

    <target name="release" depends="-build.setup,build.img,build.assets,build.html,build.manifest">
        <exec executable="chromium">
            <arg value="--pack-extension=${build.dir}" />
            <arg value="--pack-extension-key=${privatekey}" />
        </exec>
        <move file="${build.dir}/../chrome.crx" todir="${deploy.dir}" />
    </target>

    <target name="debug" depends="-build.setup,build.assets-debug,build.html,build.manifest">
        <copy todir="${listit.dir}" overwrite="true" flatten="true">
            <filelist dir="${build.dir}">
                <file name="manifest.json" />
                <file name="index.html" />
                <file name="options.html" />
                <file name="addnotebox.html" />
            </filelist>
        </copy>
        <!--
        <mkdir dir="${debug.dir}" />
        <copy todir="${debug.dir}" overwrite="true" flatten="true">
            <filelist dir="${build.dir}">
                <file name="manifest.json" />
                <file name="index.html" />
                <file name="options.html" />
            </filelist>
        </copy>
        <link overwrite="yes" link="${debug.dir}/js" resource="${listit.dir}/js" />
        <link overwrite="yes" link="${debug.dir}/css" resource="${listit.dir}/css" />
        <link overwrite="yes" link="${debug.dir}/img" resource="${listit.dir}/img" />
        -->
    </target>

    <target name="build.assets" depends="-build.setup">
        <property name="assets.dir" location="${build.dir}" />
        <mkdir dir="${build.css.dir}" />
        <mkdir dir="${build.js.dir}" />

        <!-- Compiles given resources and stores their paths in buid.@resource.@type.path -->
        <deploy-resource name="wysihtml5" />
        <parallel>
            <deploy-resource name="sidebar" />
            <deploy-resource name="background" />
            <deploy-resource name="options" />
            <deploy-resource name="addnotebox" />
        </parallel>
    </target>

    <target name="build.html" depends="-build.setup">
        <deploy-html resource="sidebar" />
        <deploy-html resource="options" />
        <deploy-html resource="addnotebox" />
    </target>

    <target name="build.manifest" depends="-build.setup">
        <local name="background_path" />
        <jsonpath property="background_path">
            <resources refid="build.background.js.files" />
        </jsonpath>
        <copy file="${platform.dir}/manifest.json.tmpl" tofile="${build.dir}/manifest.json">
            <filterchain>
                <filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
                    <param type="propertiesfile" value="manifest.properties" />
                    <param type="token" name="background_js" value="${background_path}" />
                    <param type="token" name="version" value="${listit.version}" />
                    <param type="token" name="name" value="${listit.name}" />
                    <param type="token" name="title" value="${listit.title}" />
                    <param type="token" name="description" value="${listit.description}" />
                </filterreader>
            </filterchain>
        </copy>
    </target>

    <target name="install">
        <exec executable="chromium">
            <arg value="--install-extension=${build.dir}/../chrome.crx" />
        </exec>
    </target>
</project>
